Implementing Unix Tools in Rust

Why?
* A part of computing history
* Easy to understand
* Clear interface
* Separation of concerns
* Learn a thing or two about Rust

Not trying to reinvent the wheel. Just having fun.
Not aiming to be feature-complete or bug-free.
It's a pleasure to implement these in Rust. It's safe, fast, and hackable.

Let's get started:

yes
ls
for loop: repeat
ps
parallel



```
man yes
```

```
YES(1)                    BSD General Commands Manual                   YES(1)

NAME
     yes -- be repetitively affirmative

SYNOPSIS
     yes [expletive]

DESCRIPTION
     yes outputs expletive, or, by default, ``y'', forever.

HISTORY
     The yes command appeared in 4.0BSD.

4th Berkeley Distribution        June 6, 1993        4th Berkeley Distribution
```


```
$ cargo new --bin yes
Created binary (application) `yes` project
```


